"""update to uuid 23

Revision ID: bc763cc5a560
Revises: aa412e16cfc5
Create Date: 2025-06-11 20:07:35.588278

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bc763cc5a560'
down_revision: Union[str, None] = 'aa412e16cfc5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("ALTER TABLE places ALTER COLUMN id DROP DEFAULT")
    op.execute("ALTER TABLE results ALTER COLUMN id DROP DEFAULT")
    op.alter_column('places', 'id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.UUID(),
               existing_nullable=False,
               postgresql_using='id::uuid')
    op.alter_column('results', 'id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.UUID(),
               existing_nullable=False,
               postgresql_using='id::uuid')
    op.alter_column('results', 'place_id',
               existing_type=sa.VARCHAR(),
               type_=sa.Uuid(),
               existing_nullable=True,
                    postgresql_using='place_id::uuid')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('results', 'place_id',
               existing_type=sa.Uuid(),
               type_=sa.VARCHAR(),
               existing_nullable=True,
                    postgresql_using='place_id::varchar')
    op.alter_column('results', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False,
               postgresql_using='id::varchar')
    op.alter_column('places', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False,
               postgresql_using='id::varchar')
    # ### end Alembic commands ###
