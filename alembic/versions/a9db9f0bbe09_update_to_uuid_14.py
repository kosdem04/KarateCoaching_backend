"""update to uuid 14

Revision ID: a9db9f0bbe09
Revises: 80234bf41df1
Create Date: 2025-06-11 19:31:08.657854

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a9db9f0bbe09'
down_revision: Union[str, None] = '80234bf41df1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(None, 'events', 'users', ['coach_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'groups', 'users', ['coach_id'], ['id'], ondelete='SET NULL')
    op.alter_column('reset_password_codes', 'user_id',
               existing_type=sa.VARCHAR(),
               type_=sa.Uuid(),
               existing_nullable=False,
                    postgresql_using='user_id::uuid')
    op.create_foreign_key(None, 'results', 'student_profiles', ['student_id'], ['student_id'], ondelete='SET NULL')
    op.alter_column('student_profiles', 'coach_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.create_foreign_key(None, 'student_profiles', 'users', ['coach_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'student_profiles', 'users', ['student_id'], ['id'], ondelete='CASCADE')
    op.drop_column('student_profiles', 'id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('student_profiles', sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'student_profiles', type_='foreignkey')
    op.drop_constraint(None, 'student_profiles', type_='foreignkey')
    op.alter_column('student_profiles', 'coach_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_constraint(None, 'results', type_='foreignkey')
    op.alter_column('reset_password_codes', 'user_id',
               existing_type=sa.Uuid(),
               type_=sa.VARCHAR(),
               existing_nullable=False,
                    postgresql_using='user_id::varchar')
    op.drop_constraint(None, 'groups', type_='foreignkey')
    op.drop_constraint(None, 'events', type_='foreignkey')
    # ### end Alembic commands ###
